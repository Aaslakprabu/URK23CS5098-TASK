package ui;

import model.Task;
import dao.TaskDAO;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import java.util.List;

public class TaskManagerApp extends JFrame {
    private JTextField titleField, idField;
    private JTextArea descArea, taskListArea;
    private TaskDAO dao = new TaskDAO();

    public TaskManagerApp() {
        setTitle("Task Manager");
        setSize(500, 500);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLayout(new BorderLayout());

        // Input Panel
        JPanel inputPanel = new JPanel(new GridLayout(5, 2));
        titleField = new JTextField();
        descArea = new JTextArea(3, 20);
        idField = new JTextField();

        inputPanel.add(new JLabel("Task Title:"));
        inputPanel.add(titleField);
        inputPanel.add(new JLabel("Description:"));
        inputPanel.add(new JScrollPane(descArea));
        inputPanel.add(new JLabel("Task ID to Delete:"));
        inputPanel.add(idField);

        JButton addBtn = new JButton("Add Task");
        JButton viewBtn = new JButton("View Tasks");
        JButton deleteBtn = new JButton("Delete Task");

        inputPanel.add(addBtn);
        inputPanel.add(viewBtn);
        inputPanel.add(deleteBtn);

        add(inputPanel, BorderLayout.NORTH);

        // Display Panel
        taskListArea = new JTextArea();
        taskListArea.setEditable(false);
        add(new JScrollPane(taskListArea), BorderLayout.CENTER);

        // Button Actions
        addBtn.addActionListener(e -> {
            try {
                String title = titleField.getText();
                String desc = descArea.getText();
                dao.addTask(new Task(title, desc));
                JOptionPane.showMessageDialog(this, "Task added!");
                titleField.setText("");
                descArea.setText("");
            } catch (Exception ex) {
                showError(ex);
            }
        });

        viewBtn.addActionListener(e -> {
            try {
                List<Task> tasks = dao.getAllTasks();
                taskListArea.setText("");
                for (Task t : tasks) {
                    taskListArea.append(t + "\n");
                }
            } catch (Exception ex) {
                showError(ex);
            }
        });

        deleteBtn.addActionListener(e -> {
            try {
                int id = Integer.parseInt(idField.getText());
                dao.deleteTask(id);
                JOptionPane.showMessageDialog(this, "Task deleted!");
                idField.setText("");
            } catch (Exception ex) {
                showError(ex);
            }
        });
    }

    private void showError(Exception ex) {
        JOptionPane.showMessageDialog(this, "Error: " + ex.getMessage());
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new TaskManagerApp().setVisible(true));
    }
}
